/* Generated by Yosys 0.56+186 (git sha1 83d953e95, x86_64-w64-mingw32-g++ 13.2.1 -O3) */

(* top =  1  *)
(* src = "yosys_test/counter.v:1.1-14.10" *)
module counter(clk, rst_n, count);
  (* src = "yosys_test/counter.v:2.16-2.19" *)
  input clk;
  wire clk;
  (* src = "yosys_test/counter.v:3.16-3.21" *)
  input rst_n;
  wire rst_n;
  (* src = "yosys_test/counter.v:4.22-4.27" *)
  output [3:0] count;
  reg [3:0] count;
  wire _00_;
  wire _01_;
  (* force_downto = 32'd1 *)
  (* src = "yosys_test/counter.v:11.18-11.27|C:\\Users\\MYLAP~1\\Desktop\\git\\OSS-CA~1\\bin\\../share/yosys/techmap.v:270.23-270.24" *)
  wire [3:0] _02_;
  (* force_downto = 32'd1 *)
  (* src = "yosys_test/counter.v:11.18-11.27|C:\\Users\\MYLAP~1\\Desktop\\git\\OSS-CA~1\\bin\\../share/yosys/techmap.v:270.26-270.27" *)
  wire [3:0] _03_;
  assign _02_[0] = ~count[0];
  assign _00_ = ~(count[1] & count[0]);
  assign _03_[2] = ~(_00_ ^ count[2]);
  assign _01_ = _00_ | ~(count[2]);
  assign _03_[3] = ~(_01_ ^ count[3]);
  assign _03_[1] = count[1] ^ count[0];
  (* src = "yosys_test/counter.v:7.1-12.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) count[0] <= 1'h0;
    else count[0] <= _02_[0];
  (* src = "yosys_test/counter.v:7.1-12.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) count[1] <= 1'h0;
    else count[1] <= _03_[1];
  (* src = "yosys_test/counter.v:7.1-12.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) count[2] <= 1'h0;
    else count[2] <= _03_[2];
  (* src = "yosys_test/counter.v:7.1-12.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) count[3] <= 1'h0;
    else count[3] <= _03_[3];
  assign _02_[3:1] = count[3:1];
  assign _03_[0] = _02_[0];
endmodule
